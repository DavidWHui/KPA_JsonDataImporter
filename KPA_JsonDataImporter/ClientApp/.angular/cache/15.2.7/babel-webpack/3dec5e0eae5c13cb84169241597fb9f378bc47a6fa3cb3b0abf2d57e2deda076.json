{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/example-data.service\";\nimport * as i2 from \"@angular/common\";\nfunction ImportJsonComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Upload Completed\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ImportJsonComponent {\n  constructor(exampleDataService) {\n    this.exampleDataService = exampleDataService;\n    this.fileToUpload = null;\n    this.isCompleted = false;\n  }\n  uploadFile() {\n    console.log(\"uploadFile\");\n    if (this.fileToUpload !== null) {\n      let test = this.exampleDataService.importJson(this.fileToUpload, this.fileToUpload.name).pipe(map(data => {\n        console.log(data);\n      })).subscribe(result => {\n        this.isCompleted = true;\n        console.log(result);\n      });\n    }\n  }\n  handleFileInput(e) {\n    let file = e.target.files?.[0];\n    if (typeof file !== \"undefined\") {\n      this.fileToUpload = file;\n      console.log(\"savedfile\");\n    }\n  }\n}\nImportJsonComponent.ɵfac = function ImportJsonComponent_Factory(t) {\n  return new (t || ImportJsonComponent)(i0.ɵɵdirectiveInject(i1.ExampleDataService));\n};\nImportJsonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImportJsonComponent,\n  selectors: [[\"app-import-json\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"text-center\"], [\"type\", \"file\", 1, \"form-control\", 3, \"change\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function ImportJsonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Import Json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ImportJsonComponent_p_2_Template, 3, 0, \"p\", 0);\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 2);\n      i0.ɵɵlistener(\"change\", function ImportJsonComponent_Template_input_change_4_listener($event) {\n        return ctx.handleFileInput($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ImportJsonComponent_Template_button_click_5_listener() {\n        return ctx.uploadFile();\n      });\n      i0.ɵɵtext(6, \" Upload \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isCompleted);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,GAAG,QAAQ,gBAAgB;;;;;;ICCpCC,yBAAuB;IAAIA,gCAAgB;IAAAA,iBAAK;;;ADQhD,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAHtC,iBAAY,GAAgB,IAAI;IAChC,gBAAW,GAAY,KAAK;EAEkC;EAE9DC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,IAAI,IAAI,CAACC,YAAY,KAAK,IAAI,EAAE;MAC9B,IAAIC,IAAI,GAAG,IAAI,CAACL,kBAAkB,CAACM,UAAU,CAAC,IAAI,CAACF,YAAY,EAAE,IAAI,CAACA,YAAY,CAACG,IAAI,CAAC,CAACC,IAAI,CAACZ,GAAG,CAACa,IAAI,IAAG;QAAGP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;QACpJ,IAAI,CAACC,WAAW,GAAG,IAAI;QACvBV,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC;MACrB,CAAC,CAAC;;EAEN;EAEAE,eAAe,CAACC,CAAQ;IACtB,IAAIC,IAAI,GAAID,CAAC,CAACE,MAA2B,CAACC,KAAK,GAAG,CAAC,CAAC;IAEpD,IAAI,OAAOF,IAAI,KAAK,WAAW,EAAE;MAC/B,IAAI,CAACX,YAAY,GAAGW,IAAI;MACxBb,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;EAE5B;;AAvBWL,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCzB,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MAEpBA,gEAAoD;MAEpDA,8BAAyB;MAEhBA;QAAA,OAAU0B,2BAAuB;MAAA,EAAC;MADzC1B,iBAC0C;MAC1CA,iCAAuD;MAA/CA;QAAA,OAAS0B,gBAAY;MAAA,EAAC;MAC5B1B,wBACF;MAAAA,iBAAS;;;MAPPA,eAAiB;MAAjBA,sCAAiB","names":["map","i0","ImportJsonComponent","constructor","exampleDataService","uploadFile","console","log","fileToUpload","test","importJson","name","pipe","data","subscribe","result","isCompleted","handleFileInput","e","file","target","files","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\david\\source\\repos\\KPA_JsonDataImporter\\KPA_JsonDataImporter\\ClientApp\\src\\app\\import-json\\import-json.component.ts","C:\\Users\\david\\source\\repos\\KPA_JsonDataImporter\\KPA_JsonDataImporter\\ClientApp\\src\\app\\import-json\\import-json.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { ExampleDataService } from \"../services/example-data.service\"\r\n\r\n\r\n@Component({\r\n  selector: 'app-import-json',\r\n  templateUrl: './import-json.component.html'\r\n})\r\n\r\nexport class ImportJsonComponent {\r\n  fileToUpload: File | null = null;\r\n  isCompleted: boolean = false;\r\n\r\n  constructor(private exampleDataService: ExampleDataService) { }\r\n\r\n  uploadFile() {\r\n    console.log(\"uploadFile\");\r\n    if (this.fileToUpload !== null) {\r\n      let test = this.exampleDataService.importJson(this.fileToUpload, this.fileToUpload.name).pipe(map(data => { console.log(data); })).subscribe(result => {\r\n        this.isCompleted = true;\r\n        console.log(result);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFileInput(e: Event) {\r\n    let file = (e.target as HTMLInputElement).files?.[0];\r\n\r\n    if (typeof file !== \"undefined\") {\r\n      this.fileToUpload = file;\r\n      console.log(\"savedfile\");\r\n    }\r\n  }\r\n}\r\n","<h1>Import Json</h1>\r\n\r\n<p *ngIf=\"isCompleted\"><em>Upload Completed</em></p>\r\n\r\n<div class=\"text-center\">\r\n  <input class=\"form-control\" type=\"file\"\r\n         (change)=\"handleFileInput($event)\">\r\n  <button (click)=\"uploadFile()\" class=\"btn btn-success\">\r\n    Upload\r\n  </button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}